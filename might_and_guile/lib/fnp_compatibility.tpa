
// 0.83.0

//REMOVE BLANK LINES MACRO___________________________________________________________
//
DEFINE_PATCH_MACRO ~remove_blank_lines~ BEGIN
	SET "size" = (SOURCE_SIZE - 1)
	READ_BYTE ("%size%") "eof"
	WHILE ((%size% > 0) AND (("%eof%" = 0x0a) OR ("%eof%" = 0x0d))) BEGIN // removes any empty lines at the end of the file
		DELETE_BYTES "%size%" 0x01
		SET "size" = ("%size%" - 1)
		READ_BYTE ("%size%") "eof"
	END
END
//___________________________________________________________________________________


//FnP STUFF BELOW____________________________________________________________________
//
ACTION_DEFINE_ASSOCIATIVE_ARRAY d5_fnp_spheres BEGIN
  Life => 0
  Death => 0
  Benediction => 0
  Destruction => 0
  Protection => 0
  War => 0
  Exploration => 0
  Knowledge => 0
  Deception => 0
  Thought => 0
  Dread => 0
  Vigor => 0
  Affliction => 0
  Animal => 0
  Plant => 0
  Earth => 0
  Water => 0
  Air => 0
  Fire => 0
  Light => 0
  Shadow => 0
  Magic => 0
  Astral => 0
END

ACTION_DEFINE_ASSOCIATIVE_ARRAY d5_fnp_usable BEGIN
	LEATHER_ARMOR => 0
	CHAIN_ARMOR => 0
	PLATE_ARMOR => 0
	CLUB_STAFF => 0
	HAMMERS => 0
	MACES => 0
	FLAILS => 0
	AXES => 0
	DAGGERS => 0
	SHORT_SWORDS => 0
	LONG_SWORDS => 0
	SCIMITARS => 0
	KATANAS => 0
	BASTARD_SWORDS => 0
	2HAND_SWORDS => 0
	HALBERDS => 0
	SPEARS => 0
	DARTS => 0
	SLINGS => 0
	BOWS => 0
	CROSSBOWS => 0  
END

ACTION_DEFINE_ASSOCIATIVE_ARRAY d5_fnp_sphere_access BEGIN
  X => 0
  MAJOR => 0
  MINOR => 0
  FOCUS => 0
  PALADIN => 0
  RANGER => 0
  INCARNATE => 0
END

ACTION_DEFINE_ASSOCIATIVE_ARRAY d5_fnp_class_access BEGIN
  X => 0
  CLERIC => 0
  PRIEST => 0
  FIGHTER_CLERIC => 0
  CLERIC_MAGE => 0
  CLERIC_THIEF => 0
  RANGER_CLERIC => 0
  DRUID => 0
  MYSTIC => 0
  OCCULTIST => 0
  FIGHTER_MYSTIC => 0
  RANGER => 0
  SCOUT => 0
  CHAMPION => 0
  ZEALOT => 0
  SHAMAN => 0
END

DEFINE_ACTION_FUNCTION ~DEFINE_FNP_KIT_INFO~
  INT_VAR
	u_leather_armor = 1
	u_chain_armor = 1
	u_plate_armor = 1
	u_club_staff = 1
	u_hammers = 1
	u_maces = 1
	u_flails = 1
	u_axes = 0
	u_daggers = 0
	u_short_swords = 1
	u_long_swords = 0
	u_scimitars = 0
	u_katanas = 0
	u_bastard_swords = 0
	u_2hand_swords = 0
	u_halberds = 0
	u_spears = 0
	u_darts = 0
	u_slings = 1
	u_bows = 0
	u_crossbows = 1  
  STR_VAR
    clab_name = ~d5defa~
	sphere_list = ~custom~
    class = ~x~
	multiclass = ~x~
    s_Life = ~x~
    s_Death = ~x~
    s_Benediction = ~x~
    s_Destruction = ~x~
    s_Protection = ~x~
    s_War = ~x~
	s_Exploration = ~x~
    s_Knowledge = ~x~
    s_Deception = ~x~
    s_Thought = ~x~
    s_Dread = ~x~
    s_Vigor = ~x~
    s_Affliction = ~x~
    s_Animal = ~x~
    s_Plant = ~x~
    s_Earth = ~x~
    s_Water = ~x~
    s_Air = ~x~
    s_Fire = ~x~
    s_Light = ~x~
    s_Shadow = ~x~
    s_Magic = ~x~
	s_Astral = ~x~
BEGIN
  PRINT ~Defining Faiths and Powers info for kit %clab_name% ...~ 
  
  // validate required files exist
  ACTION_IF !(FILE_EXISTS ~%2da_folder%/d5_class.2da~
               || NOT FILE_EXISTS ~%2da_folder%/d5_usabl.2da~
               || NOT FILE_EXISTS ~%2da_folder%/d5_spher.2da~) BEGIN
    FAIL ~DEFINE_FNP_KIT_INFO: The required d5_class.2da, d5_usabl.2da, and d5_spher.2da template files could not be found in the folder %2da_folder%.~
  END
  
  // validate class
  ACTION_TO_UPPER class
  ACTION_IF !(VARIABLE_IS_SET $d5_fnp_class_access(~%class%~)) BEGIN
    FAIL ~DEFINE_FNP_KIT_INFO: The specified class (%class%) does not match one of the valid options: ALL, HUMAN, ELF, DWARF, GNOME, HALFLING, or ORC.~
  END
  
  // validate spheres
  ACTION_PHP_EACH d5_fnp_spheres AS sphere => val BEGIN
//    ACTION_TO_LOWER sphere
    OUTER_TEXT_SPRINT sphere ~s_%sphere%~
    OUTER_TEXT_SPRINT access EVAL ~%%sphere%%~
    ACTION_TO_UPPER %access%
    ACTION_IF !(VARIABLE_IS_SET $d5_fnp_sphere_access(~%access%~)) BEGIN
      FAIL ~DEFINE_FNP_KIT_INFO: The access value (%access%) for the sphere %sphere% does not match one of the valid options: NONE, MAJOR, MINOR, FOCUS, PALADIN, or RANGER.~
    END
  END

  // warn if CLAB could not be found
  ACTION_IF !(FILE_EXISTS_IN_GAME ~%clab_name%.2da~) BEGIN
    WARN ~DEFINE_FNP_KIT_INFO: The CLAB file (%clab_name%.2da) could not be found in the game.~
  END

  // copy over template files if they aren't present yet
  ACTION_IF !(FILE_EXISTS_IN_GAME ~d5_class.2da~) BEGIN
<<<<<<<< d5/d5_class.2da
2DA V1.0
ALL
         CLASS		SPHERE_LIST		MULTICLASS
>>>>>>>> 
	COPY ~d5/d5_class.2da~ ~override/d5_class.2da~ 
  END
  ACTION_IF !(FILE_EXISTS_IN_GAME ~d5_usabl.2da~) BEGIN
<<<<<<<< d5/d5_usabl.2da
2DA V1.0
0
				LEATHER_ARMOR	CHAIN_ARMOR		PLATE_ARMOR	CLUB_STAFF	HAMMERS		MACES		FLAILS		AXES	DAGGERS		SHORT_SWORDS	LONG_SWORDS		SCIMITARS	KATANAS		BASTARD_SWORDS	2HAND_SWORDS	HALBERDS	SPEARS	DARTS	SLINGS	BOWS	CROSSBOWS  
>>>>>>>> 
	COPY ~d5/d5_usabl.2da~ ~override/d5_usabl.2da~ 
  END
  ACTION_IF !(FILE_EXISTS_IN_GAME ~d5_spher.2da~) BEGIN
<<<<<<<< d5/d5_spher.2da
2DA V1.0
0
            Life        Death       Benediction Destruction Protection  War         Exploration Knowledge   Deception   Thought     Dread       Vigor       Affliction  Animal      Plant       Earth       Water       Air         Fire        Light       Shadow      Magic     Astral
>>>>>>>> 
	COPY ~d5/d5_spher.2da~ ~override/d5_spher.2da~ 
  END
  ACTION_IF (FILE_EXISTS_IN_GAME ~d5_spher.2da~) BEGIN
	COPY_EXISTING ~d5_spher.2da~ ~override~
	  REPLACE_TEXTUALLY ~[ %TAB%]Perdition~ ~%TAB%Astral~
	BUT_ONLY
  END
  
  ACTION_IF !(FILE_CONTAINS_EVALUATED (~d5_class.2da~ ~%clab_name%~)) BEGIN
   ACTION_IF !(~%sphere_list%~ STRING_EQUAL_CASE ~custom~) BEGIN
	ACTION_IF (FILE_EXISTS_IN_GAME ~fnp_sphere_list.tpa~) && (FILE_CONTAINS_EVALUATED (~fnp_sphere_list.tpa~ ~%sphere_list%~)) BEGIN
	 INCLUDE ~override/fnp_sphere_list.tpa~
	 LAM d5_deity_kit_sphere_lists
	 LAF ~%sphere_list%~ RET_ARRAY ~%clab_name%_spheres_array~ = EVAL ~%sphere_list%_array~ END
	 ACTION_PHP_EACH EVAL ~%clab_name%_spheres_array~ AS this_variable => kit_access BEGIN
	  ACTION_IF FILE_EXISTS_IN_GAME ~d5altsph.2da~ BEGIN
		COPY_EXISTING ~d5altsph.2da~ ~override~
		  READ_2DA_ENTRIES_NOW rows 2
		  FOR (row = 0; row < rows; ++row) BEGIN
			READ_2DA_ENTRY_FORMER rows row 0 ~fnp_sphere~
			READ_2DA_ENTRY_FORMER rows row 1 ~alt_sphere~
			PATCH_IF ~%this_variable%~ STRING_EQUAL_CASE ~%alt_sphere%~ BEGIN
			  SPRINT new_variable ~%fnp_sphere%~
			END
		  END
		BUT_ONLY
	  END ELSE BEGIN
		OUTER_SPRINT new_variable ~%this_variable%~
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Life~) BEGIN
	    ACTION_IF (~%s_Life%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Life ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Death~) BEGIN
	    ACTION_IF (~%s_Death%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Death ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Benediction~) BEGIN
	    ACTION_IF (~%s_Benediction%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Benediction ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Destruction~) BEGIN
	    ACTION_IF (~%s_Destruction%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Destruction ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Protection~) BEGIN
	    ACTION_IF (~%s_Protection%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Protection ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~War~) BEGIN
	    ACTION_IF (~%s_War%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_War ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Exploration~) BEGIN
	    ACTION_IF (~%s_Exploration%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Exploration ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Knowledge~) BEGIN
	    ACTION_IF (~%s_Knowledge%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Knowledge ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Deception~) BEGIN
	    ACTION_IF (~%s_Deception%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Deception ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Thought~) BEGIN
	    ACTION_IF (~%s_Thought%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Thought ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Dread~) BEGIN
	    ACTION_IF (~%s_Dread%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Dread ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Vigor~) BEGIN
	    ACTION_IF (~%s_Vigor%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Vigor ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Affliction~) BEGIN
	    ACTION_IF (~%s_Affliction%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Affliction ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Animal~) BEGIN
	    ACTION_IF (~%s_Animal%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Animal ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Plant~) BEGIN
	    ACTION_IF (~%s_Plant%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Plant ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Earth~) BEGIN
	    ACTION_IF (~%s_Earth%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Earth ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Air~) BEGIN
	    ACTION_IF (~%s_Air%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Air ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Water~) BEGIN
	    ACTION_IF (~%s_Water%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Water ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Fire~) BEGIN
	    ACTION_IF (~%s_Fire%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Fire ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Light~) BEGIN
	    ACTION_IF (~%s_Light%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Light ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Shadow~) BEGIN
	    ACTION_IF (~%s_Shadow%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Shadow ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Magic~) BEGIN
	    ACTION_IF (~%s_Magic%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Magic ~%kit_access%~
		END
	  END
	  ACTION_IF (~%new_variable%~ STRING_EQUAL_CASE ~Astral~) BEGIN
	    ACTION_IF (~%s_Astral%~ STRING_EQUAL_CASE ~x~) BEGIN
		  OUTER_SPRINT s_Astral ~%kit_access%~
		END
	  END
	 END
    END
   END

  // define the text that will be added to the files
    OUTER_TEXT_SPRINT class_text ~%clab_name%	%class%	%sphere_list%	%multiclass%~
    OUTER_TEXT_SPRINT usable_text ~%clab_name% 	%u_leather_armor% %u_chain_armor% %u_plate_armor% %u_club_staff% %u_hammers% %u_maces% %u_flails% %u_axes% %u_daggers% %u_short_swords% %u_long_swords% %u_scimitars% %u_katanas% %u_bastard_swords% %u_2hand_swords% %u_halberds% %u_spears% %u_darts% %u_slings% %u_bows% %u_crossbows%~
    OUTER_TEXT_SPRINT sphere_text ~%clab_name% %s_Life% %s_Death% %s_Benediction% %s_Destruction% %s_Protection% %s_War% %s_Exploration% %s_Knowledge% %s_Deception% %s_Thought% %s_Dread% %s_Vigor% %s_Affliction% %s_Animal% %s_Plant% %s_Earth% %s_Water% %s_Air% %s_Fire% %s_Light% %s_Shadow% %s_Magic% %s_Astral%~

  // uppercase text
    ACTION_TO_UPPER class_text
    ACTION_TO_UPPER usable_text
    ACTION_TO_UPPER sphere_text
    
  // append to the .2da files
    APPEND ~d5_class.2da~ ~%class_text%~
    APPEND ~d5_usabl.2da~ ~%usable_text%~
    APPEND ~d5_spher.2da~ ~%sphere_text%~
  
  // clean up the .2da files
    COPY_EXISTING ~d5_usabl.2da~ ~override~
                ~d5_class.2da~ ~override~
                ~d5_spher.2da~ ~override~
      PRETTY_PRINT_2DA
  END
END

DEFINE_ACTION_MACRO ~READ_FNP_KIT_INFO~ BEGIN
  ACTION_IF (FILE_EXISTS_IN_GAME ~d5_class.2da~
               && FILE_EXISTS_IN_GAME ~d5_usabl.2da~
               && FILE_EXISTS_IN_GAME ~d5_spher.2da~) BEGIN
    
    // read kits and class access
    COPY_EXISTING ~d5_class.2da~ ~override~
      READ_2DA_ENTRIES_NOW ~r2en_d5_class~ 2
      FOR (row = 1; row < r2en_d5_class; row += 1) BEGIN
        READ_2DA_ENTRY_FORMER ~r2en_d5_class~ row 0 kit
        READ_2DA_ENTRY_FORMER ~r2en_d5_class~ row 1 class
        TEXT_SPRINT $d5_fnp_kits(~%row%~) ~%kit%~
        TEXT_SPRINT $d5_fnp_kit_class_access(~%kit%~) ~%class%~
      END
    
    // read usability access
    COPY_EXISTING ~d5_usabl.2da~ ~override~
      COUNT_2DA_COLS num_cols
      READ_2DA_ENTRIES_NOW ~r2en_d5_usable~ (num_cols - 1)
      FOR (row = 1; row < r2en_d5_usable; row += 1) BEGIN
        READ_2DA_ENTRY_FORMER ~r2en_d5_usable~ row 0 kit
        FOR (col = 0; col < (num_cols - 1); col += 1) BEGIN
          READ_2DA_ENTRY_FORMER ~r2en_d5_usable~ 0 col usable
          READ_2DA_ENTRY_FORMER ~r2en_d5_usable~ row (col + 1) access
          TEXT_SPRINT $d5_fnp_kit_usable_access(~%usable%~ ~%kit%~) ~%access%~
        END
      END
    
    // read sphere access
    COPY_EXISTING ~d5_spher.2da~ ~override~
      COUNT_2DA_COLS num_cols
      READ_2DA_ENTRIES_NOW ~r2en_d5_sphere~ (num_cols - 1)
      FOR (row = 1; row < r2en_d5_sphere; row += 1) BEGIN
        READ_2DA_ENTRY_FORMER ~r2en_d5_sphere~ row 0 kit
        FOR (col = 0; col < (num_cols - 1); col += 1) BEGIN
          READ_2DA_ENTRY_FORMER ~r2en_d5_sphere~ 0 col sphere
          READ_2DA_ENTRY_FORMER ~r2en_d5_sphere~ row (col + 1) access
          TEXT_SPRINT $d5_fnp_kit_sphere_access(~%sphere%~ ~%kit%~) ~%access%~
        END
      END
  END
END

DEFINE_ACTION_FUNCTION ~DISPLAY_FNP_KIT_INFO~ BEGIN
  ACTION_PHP_EACH d5_fnp_kits AS ind => kit BEGIN
    PRINT ~KIT: %kit%~
    ACTION_IF (VARIABLE_IS_SET $d5_fnp_kit_class_access(~%kit%~)) BEGIN
      OUTER_TEXT_SPRINT class $d5_fnp_kit_class_access(~%kit%~)
      PRINT ~  CLASS: %class%~
      PRINT ~  USABILITY:~
      ACTION_PHP_EACH d5_fnp_usable AS usable => val BEGIN
        ACTION_IF (VARIABLE_IS_SET $d5_fnp_kit_usable_access(~%usable%~ ~%kit%~)) BEGIN
          OUTER_TEXT_SPRINT access $d5_fnp_kit_usable_access(~%usable%~ ~%kit%~)
          ACTION_IF (IS_AN_INT access && access > 0) BEGIN
            PRINT ~    %usable%: %access%~
          END
        END
      END
      PRINT ~  SPHERES:~
      ACTION_PHP_EACH d5_fnp_spheres AS sphere => val BEGIN
        ACTION_IF (VARIABLE_IS_SET $d5_fnp_kit_sphere_access(~%sphere%~ ~%kit%~)) BEGIN
          OUTER_TEXT_SPRINT access $d5_fnp_kit_sphere_access(~%sphere%~ ~%kit%~)
          ACTION_IF (VARIABLE_IS_SET $d5_fnp_sphere_access(~%access%~) && NOT ~%access%~ STRING_EQUAL_CASE ~X~) BEGIN
            PRINT ~    %sphere%: %access%~
          END
        END
      END
    END
  END
END


//ADD FnP SPHERES TO MOD KIT_________________________________________________________
//
DEFINE_ACTION_FUNCTION apply_fnp_spheres STR_VAR clab_name = ~x~ BEGIN

  LAM ~READ_FNP_KIT_INFO~

  COPY_EXISTING ~d5_class.2da~ ~override~
   READ_2DA_ENTRIES_NOW ~r2en_d5_class~ 2
   FOR (row = 1; row < r2en_d5_class; row += 1) BEGIN
	READ_2DA_ENTRY_FORMER ~r2en_d5_class~ row 0 kit
	READ_2DA_ENTRY_FORMER ~r2en_d5_class~ row 1 type
	TEXT_SPRINT $d5_fnp_kit_caster_type(~%kit%~) ~%type%~
   END
  BUT_ONLY

  INCLUDE ~%MOD_FOLDER%/lib/qd_multiclass.tpa~
  OUTER_SPRINT sphere_access ~- Access to the spheres of:~
  OUTER_SPRINT focus_access ~- Focus access to the spheres of:~
  OUTER_SPRINT major_access ~- Major access to the spheres of:~
  OUTER_SPRINT minor_access ~- Minor access to the spheres of:~
  OUTER_SPRINT advantages ~Advantages:~
  OUTER_SPRINT abilities ~Abilities:~
  OUTER_SPRINT disadvantages ~Disadvantages:~
  OUTER_SPRINT restrictions ~Restrictions:~
  OUTER_TEXT_SPRINT focus_sphere_list ~~
  OUTER_TEXT_SPRINT major_sphere_list ~~
  OUTER_TEXT_SPRINT minor_sphere_list ~~
  OUTER_TEXT_SPRINT paladin_sphere_list ~~
  OUTER_TEXT_SPRINT ranger_sphere_list ~~
  OUTER_TEXT_SPRINT total_sphere_list ~~
  
  ACTION_IF (VARIABLE_IS_SET %clab_name%) AND !(~%clab_name%~ STRING_EQUAL_CASE ~x~) BEGIN
	OUTER_SPRINT mod_clab ~%clab_name%~
  END
  ACTION_IF !(VARIABLE_IS_SET %mod_clab%) BEGIN
	COPY_EXISTING ~d5_class.2da~ ~override~
	  COUNT_2DA_ROWS 2 rows
	  READ_2DA_ENTRY (rows - 1) 0 2 last_clab
	BUT_ONLY
	PRINT ~%last_clab%~
	OUTER_SPRINT mod_clab ~%last_clab%~
  END

 COPY_EXISTING ~d5_class.2da~ ~override~
  READ_2DA_ENTRIES_NOW ~r2en_d5_class~ 2
  FOR (row = 1; row < r2en_d5_class; row += 1) BEGIN
	READ_2DA_ENTRY_FORMER ~r2en_d5_class~ row 0 kit
	PATCH_IF (~%kit%~ STRING_EQUAL_CASE ~%mod_clab%~) BEGIN
	  READ_2DA_ENTRY_FORMER ~r2en_d5_class~ row 1 caster_type
	END
  END
 BUT_ONLY

 COPY_EXISTING ~kitlist.2da~ ~override~
  READ_2DA_ENTRIES_NOW ~r2en_kitlist~ 10
  FOR (row = 3; row < r2en_kitlist; row += 1) BEGIN
	READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 5 kit_clab
	PATCH_IF (~%kit_clab%~ STRING_EQUAL_CASE ~%mod_clab%~) BEGIN
	  READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 0 kit_index
	  READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 1 kit_label
	  READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 4 kit_desc
	  READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 9 kit_code
	  READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 8 kit_class
	END
  END
 BUT_ONLY
 ACTION_IF (%kit_class% = 3) OR 
 			(%kit_class% = 11) OR  
 			(%kit_class% = 8) OR  
 			(%kit_class% = 14) OR  
 			(%kit_class% = 15) OR  
 			(%kit_class% = 18) BEGIN
  COPY_EXISTING ~luabbr.2da~ ~override~
	REPLACE_TEXTUALLY ~^\(%kit_label%[ %TAB%]+\).+$~ ~\1b_%kit_index%~
  BUT_ONLY
 END
 COPY ~faiths_and_powers/data/hlas/luclxyz.2da~ ~override/lub_%kit_index%.2da~
 ACTION_IF (%kit_class% = 11) BEGIN 	// druid
  COPY ~faiths_and_powers/data/hlas/ludrxyz.2da~ ~override/lub_%kit_index%.2da~
 END
 ACTION_IF (%kit_class% = 8) BEGIN 	// f/c
  COPY ~faiths_and_powers/data/hlas/lufcxyz.2da~ ~override/lub_%kit_index%.2da~
 END
 ACTION_IF (%kit_class% = 18) BEGIN 	// c/r
  COPY ~faiths_and_powers/data/hlas/lucrxyz.2da~ ~override/lub_%kit_index%.2da~
 END
 ACTION_IF (%kit_class% = 15) BEGIN 	// c/t
  COPY ~faiths_and_powers/data/hlas/luctxyz.2da~ ~override/lub_%kit_index%.2da~
 END
 ACTION_IF (%kit_class% = 14) BEGIN 	// c/m
  COPY ~faiths_and_powers/data/hlas/lucmxyz.2da~ ~override/lub_%kit_index%.2da~
 END
 ACTION_PHP_EACH d5_fnp_kits AS ind => kit BEGIN
  ACTION_IF (~%kit%~ STRING_EQUAL_CASE ~%mod_clab%~) BEGIN
	ACTION_PHP_EACH d5_fnp_spheres AS sphere => val BEGIN
	  COPY_EXISTING ~d5altsph.2da~ ~override~
		READ_2DA_ENTRIES_NOW rows 2
		FOR (row = 0; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 0 ~fnp_sphere~
		  READ_2DA_ENTRY_FORMER rows row 1 ~alt_sphere~
		  PATCH_IF (~%sphere%~ STRING_EQUAL_CASE ~%fnp_sphere%~) BEGIN
			SPRINT ~text_sphere~ ~%alt_sphere%~
		  END
		END
	  BUT_ONLY
	  ACTION_IF (VARIABLE_IS_SET $d5_fnp_kit_sphere_access(~%sphere%~ ~%kit%~)) BEGIN
	    OUTER_TEXT_SPRINT access $d5_fnp_kit_sphere_access(~%sphere%~ ~%kit%~)
		OUTER_INNER_PATCH ~%sphere%~ BEGIN
		  SNPRINT 3 ~shortsphere~ ~%sphere%~
		END
		ACTION_IF (VARIABLE_IS_SET $d5_fnp_sphere_access(~%access%~)) && (~%access%~ STRING_EQUAL_CASE ~FOCUS~) BEGIN
		  ACTION_IF !(FILE_EXISTS_IN_GAME ~d5__v_plus_spheres.d5~) BEGIN
		    COPY_EXISTING ~lub_%kit_index%.2da~ ~override~
			  PATCH_IF (FILE_EXISTS ~weidu_external/faiths_and_powers/hlas/hlas_%text_sphere%.txt~) BEGIN
			    LPM remove_blank_lines
			    APPEND_FILE ~weidu_external/faiths_and_powers/hlas/hlas_%text_sphere%.txt~
			  END
		    BUT_ONLY
		  END
		  COPY_EXISTING ~lub_%kit_index%.2da~ ~override~
			REPLACE_TEXTUALLY ~[%LNL%%MNL%%WNL%]zzz~ ~~
		  BUT_ONLY
		  ACTION_PHP_EACH d5_fnp_kit_caster_type AS this_kit => caster_type BEGIN
			ACTION_IF (~%this_kit%~ STRING_EQUAL_CASE ~%mod_clab%~) && !(~%caster_type%~ STRING_EQUAL_CASE ~mystic~) BEGIN
			  ACTION_IF !(FILE_EXISTS_IN_GAME ~d5__5E_casting_divine.d5~) /*AND !(FILE_EXISTS_IN_GAME ~d5__fnp_spont_casting.d5~)*/ BEGIN
			    APPEND ~%mod_clab%.2da~ ~SPHERES     AP_D5SF%shortsphere~ 
			  END
			  ACTION_IF (FILE_EXISTS_IN_GAME ~d5__5E_casting_divine.d5~) OR (FILE_EXISTS_IN_GAME ~d5__fnp_spont_casting.d5~) BEGIN
			    APPEND ~%mod_clab%.2da~ ~SPHERES     AP_D5ZF%shortsphere~ 
			  END
			END
		  END
		  ACTION_PHP_EACH d5_fnp_kit_caster_type AS this_kit => caster_type BEGIN
			ACTION_IF (~%this_kit%~ STRING_EQUAL_CASE ~%mod_clab%~) && (~%caster_type%~ STRING_EQUAL_CASE ~mystic~) BEGIN
			  APPEND ~%mod_clab%.2da~ ~SPHERES     AP_D5SP%shortsphere~ 
			END
		  END
		  OUTER_TEXT_SPRINT focus_sphere_list ~%focus_sphere_list%, %text_sphere%~
		END
		ACTION_IF (VARIABLE_IS_SET $d5_fnp_sphere_access(~%access%~)) && (~%access%~ STRING_EQUAL_CASE ~MAJOR~) BEGIN
		  ACTION_IF !(FILE_EXISTS_IN_GAME ~d5__v_plus_spheres.d5~) BEGIN
		    COPY_EXISTING ~lub_%kit_index%.2da~ ~override~
			  PATCH_IF (FILE_EXISTS ~weidu_external/faiths_and_powers/hlas/hlas_%text_sphere%.txt~) BEGIN
			    LPM remove_blank_lines
			    APPEND_FILE ~weidu_external/faiths_and_powers/hlas/hlas_%text_sphere%.txt~
			  END
		    BUT_ONLY
		  END
		  COPY_EXISTING ~lub_%kit_index%.2da~ ~override~
			REPLACE_TEXTUALLY ~[%LNL%%MNL%%WNL%]zzz~ ~~
		  BUT_ONLY
		  ACTION_PHP_EACH d5_fnp_kit_caster_type AS this_kit => caster_type BEGIN
			ACTION_IF (~%this_kit%~ STRING_EQUAL_CASE ~%mod_clab%~) && !(~%caster_type%~ STRING_EQUAL_CASE ~mystic~) BEGIN
			  APPEND ~%mod_clab%.2da~ ~SPHERES     AP_D5SP%shortsphere~ 
			END
		  END
		  OUTER_TEXT_SPRINT major_sphere_list ~%major_sphere_list%, %text_sphere%~
		END
		ACTION_IF (VARIABLE_IS_SET $d5_fnp_sphere_access(~%access%~)) && (~%access%~ STRING_EQUAL_CASE ~MINOR~) BEGIN
		  ACTION_PHP_EACH d5_fnp_kit_caster_type AS this_kit => caster_type BEGIN
			ACTION_IF (~%this_kit%~ STRING_EQUAL_CASE ~%mod_clab%~) && !(~%caster_type%~ STRING_EQUAL_CASE ~mystic~) BEGIN
			  APPEND ~%mod_clab%.2da~ ~SPHERES     AP_D5SM%shortsphere~ 
			END
		  END
		  OUTER_TEXT_SPRINT minor_sphere_list ~%minor_sphere_list%, %text_sphere%~
		END
		ACTION_IF (VARIABLE_IS_SET $d5_fnp_sphere_access(~%access%~)) && (~%access%~ STRING_EQUAL_CASE ~PALADIN~) BEGIN
		  ACTION_PHP_EACH d5_fnp_kit_caster_type AS this_kit => caster_type BEGIN
			ACTION_IF (~%this_kit%~ STRING_EQUAL_CASE ~%mod_clab%~) && !(~%caster_type%~ STRING_EQUAL_CASE ~mystic~) BEGIN
			  APPEND ~%mod_clab%.2da~ ~SPHERES     AP_D5SP%shortsphere%  ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        **** ~ 
			END
		  END
		  OUTER_TEXT_SPRINT minor_sphere_list ~%minor_sphere_list%, %text_sphere%~
		END
		ACTION_IF (VARIABLE_IS_SET $d5_fnp_sphere_access(~%access%~)) && (~%access%~ STRING_EQUAL_CASE ~RANGER~) BEGIN
		  ACTION_PHP_EACH d5_fnp_kit_caster_type AS this_kit => caster_type BEGIN
			ACTION_IF (~%this_kit%~ STRING_EQUAL_CASE ~%mod_clab%~) && !(~%caster_type%~ STRING_EQUAL_CASE ~mystic~) BEGIN
			  APPEND ~%mod_clab%.2da~ ~SPHERES     AP_D5SP%shortsphere~ 
			END
		  END
		  OUTER_TEXT_SPRINT minor_sphere_list ~%minor_sphere_list%, %text_sphere%~
		END
	  END
	 END
	 ACTION_IF !(~%focus_sphere_list%~ STRING_EQUAL_CASE ~~) BEGIN
		OUTER_TEXT_SPRINT focus_sphere_list ~%WNL%%focus_access%%focus_sphere_list%~
	 END
	 OUTER_TEXT_SPRINT total_sphere_list ~%total_sphere_list%%focus_sphere_list%~
	 ACTION_IF !(~%major_sphere_list%~ STRING_EQUAL_CASE ~~) BEGIN
		OUTER_TEXT_SPRINT major_sphere_list ~%WNL%%major_access%%major_sphere_list%~
	 END
	 OUTER_TEXT_SPRINT total_sphere_list ~%total_sphere_list%%major_sphere_list%~
	 ACTION_IF !(~%minor_sphere_list%~ STRING_EQUAL_CASE ~~) BEGIN
		OUTER_TEXT_SPRINT minor_sphere_list ~%WNL%%minor_access%%minor_sphere_list%~
	 END
	 OUTER_TEXT_SPRINT total_sphere_list ~%total_sphere_list%%minor_sphere_list%~
     OUTER_INNER_PATCH_SAVE total_sphere_list ~%total_sphere_list%~ BEGIN
	   REPLACE_TEXTUALLY ~:,~ ~:~
     END
	 OUTER_TEXT_SPRINT kit_sphere_list ~Abilities: %total_sphere_list%~
	 ACTION_IF IS_AN_INT ~%kit_desc%~ BEGIN
		ACTION_GET_STRREF %kit_desc% kit_description 
		OUTER_PATCH_SAVE kit_description ~%kit_description%~ BEGIN
			REPLACE_TEXTUALLY ~%disadvantages%~ ~%restrictions%~
	//		REPLACE_TEXTUALLY ~%abilities%~ ~%kit_sphere_list%~
			REPLACE_TEXTUALLY ~%advantages%~ ~%kit_sphere_list%~
		END
		STRING_SET_EVALUATE %kit_desc% ~%kit_description%~
	 END
	 OUTER_TEXT_SPRINT focus_sphere_list ~~
	 OUTER_TEXT_SPRINT major_sphere_list ~~
	 OUTER_TEXT_SPRINT minor_sphere_list ~~
	 OUTER_TEXT_SPRINT total_sphere_list ~~
	 ACTION_IF (%kit_class% = 3) OR  
	 		  (%kit_class% = 11) OR  
	 		  (%kit_class% = 6) OR  
	 		  (%kit_class% = 12) BEGIN
		APPEND ~%mod_clab%.2da~ ~SPHERES     AP_D5SPMEM  ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        **** ~
		  UNLESS ~AP_D5SPMEM~
	 END
	 ACTION_IF (%kit_class% = 8) OR  
	 		(%kit_class% = 14) OR  
	 		(%kit_class% = 15) OR  
	 		(%kit_class% = 18) OR
	 		(%kit_class% = 16) BEGIN
	  ACTION_IF (%kit_class% = 8) OR  
	 			(%kit_class% = 14) OR  
	 			(%kit_class% = 15) OR  
	 			(%kit_class% = 18) BEGIN
	 	OUTER_TEXT_SPRINT class_letter ~P~
	  END
	  ACTION_IF (%kit_class% = 16) BEGIN
	 	OUTER_TEXT_SPRINT class_letter ~D~
	  END
	  ACTION_IF IS_AN_INT ~%kit_code%~ BEGIN
		COPY_EXISTING ~%mod_clab%.2da~ ~override~ 
		  COUNT_2DA_COLS cols 
		  READ_2DA_ENTRIES_NOW rows cols 
		  FOR (row = 3; row < rows; ++row) BEGIN 
			READ_2DA_ENTRY_FORMER rows row 0 sphere 
			PATCH_IF (~%sphere%~ STRING_EQUAL_CASE ~SPHERES~) BEGIN	
			  FOR (col = 1; col < cols; ++col) BEGIN 
				READ_2DA_ENTRY_FORMER rows row col ability
				PATCH_IF (NOT ~%ability%~ STRING_EQUAL ~****~) BEGIN 
				  SET string_length = (STRING_LENGTH ~%ability%~) - 3
				  LPF SUBSTRING INT_VAR start = 3 length = EVAL %string_length% STR_VAR string = EVAL ~%ability%~ RET abil_new = substring END
				  INNER_ACTION BEGIN 
					ACTION_IF !(FILE_EXISTS_IN_GAME ~QD_MC_AP.eff~) BEGIN
					  CREATE EFF ~QD_MC_AP~ 
						WRITE_LONG   0x10 146 //cast spell
						WRITE_LONG   0x14 2   //preset target 
						WRITE_LONG   0x20 1   //cast instantly (ignore level) 
						WRITE_SHORT  0x24 1   //permament until death
						WRITE_SHORT  0x2c 100 //probability 100% 
					END
					COPY_EXISTING ~QD_MC_AP.eff~ ~override/%abil_new%#.eff~
					  WRITE_EVALUATED_ASCII 0x30 ~%abil_new%~
					  SET col_length = STRING_LENGTH ~%col%~
					LAF QD_ENSURE_QDMC_SPL STR_VAR base_class = EVAL ~%class_letter%~ END
					ACTION_IF (%col_length% = 1) BEGIN 
					  COPY_EXISTING ~override/QD_MC%class_letter%0%col%.spl~ ~override~ 
						LPF ADD_SPELL_EFFECT INT_VAR insert_point = 0 opcode = 177 target = 1 timing = 9 resist_dispel = 0 power = 0 parameter1 = %kit_code% parameter2 = 9 STR_VAR resource = EVAL ~%abil_new%#~ END  
					END 
					ACTION_IF (%col_length% = 2) BEGIN
					  COPY_EXISTING ~override/QD_MC%class_letter%%col%.spl~ ~override~ 
						LPF ADD_SPELL_EFFECT INT_VAR insert_point = 0 opcode = 177 target = 1 timing = 9 resist_dispel = 0 power = 0 parameter1 = %kit_code% parameter2 = 9 STR_VAR resource = EVAL ~%abil_new%#~ END  
					END 
				  END 
				END
			  END 
			END 
		  END
		BUT_ONLY
	  END
	END
  END
 END

END
//___________________________________________________________________________________


//APPLY FnP USABILITY RULES__________________________________________________________
//
DEFINE_ACTION_FUNCTION apply_fnp_usability STR_VAR clab_name = ~x~ BEGIN

 LAM ~READ_FNP_KIT_INFO~

 OUTER_TEXT_SPRINT hex_lat 			~04000000~
 OUTER_TEXT_SPRINT hex_helm 		~02000000~
 OUTER_TEXT_SPRINT hex_talos 		~01000000~
 OUTER_TEXT_SPRINT hex_totemic 		~08000000~
 OUTER_TEXT_SPRINT hex_shapeshifter ~10000000~
 OUTER_TEXT_SPRINT hex_avenger		~20000000~

 ACTION_IF (VARIABLE_IS_SET %clab_name%) AND !(~%clab_name%~ STRING_EQUAL_CASE ~x~) BEGIN
	OUTER_SPRINT mod_clab ~%clab_name%~
 END
 ACTION_IF !(VARIABLE_IS_SET %mod_clab%) BEGIN
	COPY_EXISTING ~d5_class.2da~ ~override~
	  COUNT_2DA_ROWS 2 rows
	  READ_2DA_ENTRY (rows - 1) 0 2 last_clab
	BUT_ONLY
	PRINT ~%last_clab%~
	OUTER_SPRINT mod_clab ~%last_clab%~
 END

 COPY_EXISTING ~d5_usabl.2da~ ~override~
  COUNT_2DA_COLS cols
  COUNT_2DA_ROWS (cols - 1) rows
//  READ_2DA_ENTRIES_NOW ~r2en_d5_usable~ (cols - 1)
  FOR (row = 1; row < rows; ++row) BEGIN
	READ_2DA_ENTRY row 0 (cols - 1) kit
	PATCH_IF (~%kit%~ STRING_EQUAL_CASE ~%mod_clab%~) BEGIN
	  FOR (col = 0; col < (cols - 1); ++col) BEGIN
		READ_2DA_ENTRY 0 col (cols - 1) usable
		READ_2DA_ENTRY row (col + 1) (cols - 1) access
		TEXT_SPRINT $d5_fnp_mod_kit_use(~%usable%~ ~%kit%~) ~%access%~
	  END
	END
  END

 ACTION_PHP_EACH d5_fnp_mod_kit_use AS use => val BEGIN
  ACTION_IF (~%use%~ STRING_EQUAL_CASE ~CHAIN_ARMOR~) BEGIN
	ACTION_IF (%val% = 1) BEGIN
	  PRINT ~    %use_1% : %use% : %val%~
	  COPY_EXISTING ~kitlist.2da~ ~override~
//		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW ~r2en_kitlist~ 10
		FOR (row = 3; row < r2en_kitlist; row += 1) BEGIN
		  READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 5 kit_clab
		  READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 8 kit_class
		  PATCH_IF (~%kit_clab%~ STRING_EQUAL_CASE ~%use_1%~) BEGIN
//			PATCH_IF (%kit_class% = 3 || %kit_class% = 11 || %kit_class% = 21 || %kit_class% = 8 || %kit_class% = 14 || %kit_class% = 15 || %kit_class% = 18 || %kit_class% = 16) BEGIN
			  SET_2DA_ENTRY row 7 10 ~0x%hex_helm%~
//			END
		  END
		END
	  BUT_ONLY
	END
	ELSE BEGIN
	  PRINT ~    %use_1% : %use% : %val%~
	  COPY_EXISTING ~kitlist.2da~ ~override~
//		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW ~r2en_kitlist~ 10
		FOR (row = 3; row < r2en_kitlist; row += 1) BEGIN
		  READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 5 kit_clab
		  READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 8 kit_class
		  PATCH_IF (~%kit_clab%~ STRING_EQUAL_CASE ~%use_1%~) BEGIN
//			PATCH_IF (%kit_class% = 3 || %kit_class% = 11 || %kit_class% = 21 || %kit_class% = 8 || %kit_class% = 14 || %kit_class% = 15 || %kit_class% = 18 || %kit_class% = 16) BEGIN
			  SET_2DA_ENTRY row 7 10 ~0x%hex_lat%~
//			END
		  END
		END
	  BUT_ONLY
	END
  END
  ACTION_IF (~%use%~ STRING_EQUAL_CASE ~PLATE_ARMOR~) BEGIN
	ACTION_IF (%val% = 1) BEGIN
	  PRINT ~    %use_1% : %use% : %val%~
	  COPY_EXISTING ~kitlist.2da~ ~override~
//		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW ~r2en_kitlist~ 10
		FOR (row = 3; row < r2en_kitlist; row += 1) BEGIN
		  READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 5 kit_clab
		  READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 8 kit_class
		  PATCH_IF (~%kit_clab%~ STRING_EQUAL_CASE ~%use_1%~) BEGIN
//			PATCH_IF (%kit_class% = 3 || %kit_class% = 11 || %kit_class% = 21 || %kit_class% = 8 || %kit_class% = 14 || %kit_class% = 15 || %kit_class% = 18 || %kit_class% = 16) BEGIN
			  SET_2DA_ENTRY row 7 10 ~0x%hex_talos%~
//			END
		  END
		END
	  BUT_ONLY
	END
  END
 END

 COPY_EXISTING ~kitlist.2da~ ~override~
//  COUNT_2DA_COLS cols
  READ_2DA_ENTRIES_NOW ~r2en_kitlist~ 10
  FOR (row = 3; row < r2en_kitlist; row += 1) BEGIN
	READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 5 kit_clab
	READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 0 kit_index
	READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 1 kit_label
	READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 8 kit_class
	READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 9 kit_code
	PATCH_IF (~%kit_clab%~ STRING_EQUAL_CASE ~%mod_clab%~) BEGIN
//	  SET patch_row = %row%
//	  PATCH_IF (%kit_class% = 3 || %kit_class% = 11 || %kit_class% = 21 || %kit_class% = 8 || %kit_class% = 14 || %kit_class% = 15 || %kit_class% = 18 || %kit_class% = 16) BEGIN
		INNER_ACTION BEGIN
		  COPY ~faiths_and_powers/data/misc/d5fnpuse.spl~ ~override/d5_u%kit_index%.spl~
		END
		PHP_EACH d5_fnp_mod_kit_use AS usable => access BEGIN
		  PATCH_IF (IS_AN_INT %access%) BEGIN
//		  PATCH_IF (VARIABLE_IS_SET $d5_fnp_kit_usable_access(~%usable%~ ~%mod_clab%~)) BEGIN
//			SPRINT access $d5_fnp_kit_usable_access(~%usable%~ ~%mod_clab%~)
			PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~CLUB_STAFF~) BEGIN			// club, staff
			  INNER_ACTION BEGIN
				COPY_EXISTING ~weapprof.2da~ override
				  READ_2DA_ENTRIES_NOW weapprof 3
				  COUNT_2DA_COLS cols
				  FOR (col = 0; col < cols - 1; ++col) BEGIN
					READ_2DA_ENTRY_FORMER weapprof 0 col column_name
					PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
					  SET_2DA_ENTRY 18 (col + 1) 3 %access%						//	club
					  SET_2DA_ENTRY 23 (col + 1) 3 %access%						//	quarterstaff
					END
				  END
				BUT_ONLY
			  END
			END
			PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~HAMMERS~) BEGIN				// war hammers
			  INNER_ACTION BEGIN
				COPY_EXISTING ~weapprof.2da~ override
				  READ_2DA_ENTRIES_NOW weapprof 3
				  COUNT_2DA_COLS cols
				  FOR (col = 0; col < cols - 1; ++col) BEGIN
					READ_2DA_ENTRY_FORMER weapprof 0 col column_name
					PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
					  SET_2DA_ENTRY 17 (col + 1) 3 %access%						// war hammer
					END
				  END
				BUT_ONLY
			  END
			  PATCH_IF (access = 0) BEGIN
				INNER_ACTION BEGIN
				  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 21 parameter2 = 0 timing = 9 END
				  BUT_ONLY
				END
			  END
			END
			PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~MACES~) BEGIN				// maces
			  INNER_ACTION BEGIN
				COPY_EXISTING ~weapprof.2da~ override
				  READ_2DA_ENTRIES_NOW weapprof 3
				  COUNT_2DA_COLS cols
				  FOR (col = 0; col < cols - 1; ++col) BEGIN
					READ_2DA_ENTRY_FORMER weapprof 0 col column_name
					PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
					  SET_2DA_ENTRY 22 (col + 1) 3 %access%						// mace
					END
				  END
				BUT_ONLY
			  END
			  PATCH_IF (access = 0) BEGIN
				INNER_ACTION BEGIN
				  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 17 parameter2 = 0 timing = 9 END
				  BUT_ONLY
				END
			  END
			END
			PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~FLAILS~) BEGIN				// flails
			  INNER_ACTION BEGIN
				COPY_EXISTING ~weapprof.2da~ override
				  READ_2DA_ENTRIES_NOW weapprof 3
				  COUNT_2DA_COLS cols
				  FOR (col = 0; col < cols - 1; ++col) BEGIN
					READ_2DA_ENTRY_FORMER weapprof 0 col column_name
					PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
					  SET_2DA_ENTRY 21 (col + 1) 3 %access%						// flail
					END
				  END
				BUT_ONLY
			  END
			  PATCH_IF (access = 0) BEGIN
				INNER_ACTION BEGIN
				  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 23 parameter2 = 0 timing = 9 END
				  BUT_ONLY
				END
			  END
			END
			PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~AXES~) BEGIN				// axes
			  INNER_ACTION BEGIN
				COPY_EXISTING ~weapprof.2da~ override
				  READ_2DA_ENTRIES_NOW weapprof 3
				  COUNT_2DA_COLS cols
				  FOR (col = 0; col < cols - 1; ++col) BEGIN
					READ_2DA_ENTRY_FORMER weapprof 0 col column_name
					PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
					  SET_2DA_ENTRY 12 (col + 1) 3 %access%						// axe
					END
				  END
				BUT_ONLY
			  END
			  PATCH_IF (access = 0) BEGIN
				INNER_ACTION BEGIN
				  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 25 parameter2 = 0 timing = 9 END
				  BUT_ONLY
				END
			  END
			END
			PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~DAGGERS~) BEGIN				// daggers
			  INNER_ACTION BEGIN
				COPY_EXISTING ~weapprof.2da~ override
				  READ_2DA_ENTRIES_NOW weapprof 3
				  COUNT_2DA_COLS cols
				  FOR (col = 0; col < cols - 1; ++col) BEGIN
					READ_2DA_ENTRY_FORMER weapprof 0 col column_name
					PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
					  SET_2DA_ENTRY 16 (col + 1) 3 %access%						//	dagger
					END
				  END
				BUT_ONLY
			  END
			  PATCH_IF (access = 0) BEGIN
				INNER_ACTION BEGIN
				  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 16 parameter2 = 0 timing = 9 END
				  BUT_ONLY
				END
			  END
			END
			PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~SHORT_SWORDS~) BEGIN		// short swords
			  INNER_ACTION BEGIN
				COPY_EXISTING ~weapprof.2da~ override
				  READ_2DA_ENTRIES_NOW weapprof 3
				  COUNT_2DA_COLS cols
				  FOR (col = 0; col < cols - 1; ++col) BEGIN
					READ_2DA_ENTRY_FORMER weapprof 0 col column_name
					PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
					  SET_2DA_ENTRY 11 (col + 1) 3 %access%						//	short sword
					END
				  END
				BUT_ONLY
			  END
			  PATCH_IF (access = 0) BEGIN
				INNER_ACTION BEGIN
				  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 19 parameter2 = 0 timing = 9 END
				  BUT_ONLY
				END
			  END
			END
			PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~LONG_SWORDS~) BEGIN			// long swords
			  INNER_ACTION BEGIN
				COPY_EXISTING ~weapprof.2da~ override
				  READ_2DA_ENTRIES_NOW weapprof 3
				  COUNT_2DA_COLS cols
				  FOR (col = 0; col < cols - 1; ++col) BEGIN
					READ_2DA_ENTRY_FORMER weapprof 0 col column_name
					PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
					  SET_2DA_ENTRY 10 (col + 1) 3 %access%						//	long sword
					END
				  END
				BUT_ONLY
			  END
			  PATCH_IF (access = 0) BEGIN
				INNER_ACTION BEGIN
				  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 20 parameter2 = 0 timing = 9 END
				  BUT_ONLY
				END
			  END
			END
			PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~SCIMITARS~) BEGIN			// scimitars
			  INNER_ACTION BEGIN
				COPY_EXISTING ~weapprof.2da~ override
				  READ_2DA_ENTRIES_NOW weapprof 3
				  COUNT_2DA_COLS cols
				  FOR (col = 0; col < cols - 1; ++col) BEGIN
					READ_2DA_ENTRY_FORMER weapprof 0 col column_name
					PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
					  SET_2DA_ENTRY 15 (col + 1) 3 %access%						//	scimitar
					END
				  END
				BUT_ONLY
			  END
			  PATCH_IF (access = 0) BEGIN
				INNER_ACTION BEGIN
				  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 29 parameter2 = 0 timing = 9 END
				  BUT_ONLY
				END
			  END
			END
			PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~KATANAS~) BEGIN				// katanas
			  INNER_ACTION BEGIN
				COPY_EXISTING ~weapprof.2da~ override
				  READ_2DA_ENTRIES_NOW weapprof 3
				  COUNT_2DA_COLS cols
				  FOR (col = 0; col < cols - 1; ++col) BEGIN
					READ_2DA_ENTRY_FORMER weapprof 0 col column_name
					PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
					  SET_2DA_ENTRY 14 (col + 1) 3 %access%						//	katana
					END
				  END
				BUT_ONLY
			  END
			  PATCH_IF (access = 0) BEGIN
				INNER_ACTION BEGIN
				  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 30 parameter2 = 0 timing = 9 END
				  BUT_ONLY
				END
			  END
			END
			PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~BASTARD_SWORDS~) BEGIN		// bastard swords
			  INNER_ACTION BEGIN
				COPY_EXISTING ~weapprof.2da~ override
				  READ_2DA_ENTRIES_NOW weapprof 3
				  COUNT_2DA_COLS cols
				  FOR (col = 0; col < cols - 1; ++col) BEGIN
					READ_2DA_ENTRY_FORMER weapprof 0 col column_name
					PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
					  SET_2DA_ENTRY 9 (col + 1) 3 %access%						//	bastard sword
					END
				  END
				BUT_ONLY
			  END
			  PATCH_IF (access = 0) BEGIN
				INNER_ACTION BEGIN
				  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 22 parameter2 = 0 timing = 9 END
				  BUT_ONLY
				END
			  END
			END
			PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~2HAND_SWORDS~) BEGIN		// 2-hand swords
			  INNER_ACTION BEGIN
				COPY_EXISTING ~weapprof.2da~ override
				  READ_2DA_ENTRIES_NOW weapprof 3
				  COUNT_2DA_COLS cols
				  FOR (col = 0; col < cols - 1; ++col) BEGIN
					READ_2DA_ENTRY_FORMER weapprof 0 col column_name
					PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
					  SET_2DA_ENTRY 13 (col + 1) 3 %access%						//	2-hand sword
					END
				  END
				BUT_ONLY
			  END
			  PATCH_IF (access = 0) BEGIN
				INNER_ACTION BEGIN
				  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 57 parameter2 = 0 timing = 9 END
				  BUT_ONLY
				END
			  END
			END
			PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~HALBERDS~) BEGIN			// halberds
			  INNER_ACTION BEGIN
				COPY_EXISTING ~weapprof.2da~ override
				  READ_2DA_ENTRIES_NOW weapprof 3
				  COUNT_2DA_COLS cols
				  FOR (col = 0; col < cols - 1; ++col) BEGIN
					READ_2DA_ENTRY_FORMER weapprof 0 col column_name
					PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
					  SET_2DA_ENTRY 20 (col + 1) 3 %access%						//	halberd
					END
				  END
				BUT_ONLY
			  END
			  PATCH_IF (access = 0) BEGIN
				INNER_ACTION BEGIN
				  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 69 parameter2 = 0 timing = 9 END
				  BUT_ONLY
				END
			  END
			END
			PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~SPEARS~) BEGIN				// spears
			  INNER_ACTION BEGIN
				COPY_EXISTING ~weapprof.2da~ override
				  READ_2DA_ENTRIES_NOW weapprof 3
				  COUNT_2DA_COLS cols
				  FOR (col = 0; col < cols - 1; ++col) BEGIN
					READ_2DA_ENTRY_FORMER weapprof 0 col column_name
					PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
					  SET_2DA_ENTRY 19 (col + 1) 3 %access%						//	spear
					END
				  END
				BUT_ONLY
			  END
			  PATCH_IF (access = 0) BEGIN
				INNER_ACTION BEGIN
				  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 44 parameter2 = 0 timing = 9 END
				  BUT_ONLY
				END
			  END
			END
			PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~DARTS~) BEGIN				// darts
			  INNER_ACTION BEGIN
				COPY_EXISTING ~weapprof.2da~ override
				  READ_2DA_ENTRIES_NOW weapprof 3
				  COUNT_2DA_COLS cols
				  FOR (col = 0; col < cols - 1; ++col) BEGIN
					READ_2DA_ENTRY_FORMER weapprof 0 col column_name
					PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
					  SET_2DA_ENTRY 26 (col + 1) 3 %access%						//	darts
					END
				  END
				BUT_ONLY
			  END
			  PATCH_IF (access = 0) BEGIN
				INNER_ACTION BEGIN
				  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 24 parameter2 = 0 timing = 9 END
				  BUT_ONLY
				END
			  END
			END
			PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~SLINGS~) BEGIN				// slings, bullets
			  INNER_ACTION BEGIN
				COPY_EXISTING ~weapprof.2da~ override
				  READ_2DA_ENTRIES_NOW weapprof 3
				  COUNT_2DA_COLS cols
				  FOR (col = 0; col < cols - 1; ++col) BEGIN
					READ_2DA_ENTRY_FORMER weapprof 0 col column_name
					PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
					  SET_2DA_ENTRY 28 (col + 1) 3 %access%						//	sling
					END
				  END
				BUT_ONLY
			  END
			  PATCH_IF (access = 0) BEGIN
				INNER_ACTION BEGIN
				  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 18 parameter2 = 0 timing = 9 END
//					LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 14 parameter2 = 0 timing = 9 END
				  BUT_ONLY
				END
			  END
			END
			PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~BOWS~) BEGIN				// long bows, short bows, arrows
			  INNER_ACTION BEGIN
				COPY_EXISTING ~weapprof.2da~ override
				  READ_2DA_ENTRIES_NOW weapprof 3
				  COUNT_2DA_COLS cols
				  FOR (col = 0; col < cols - 1; ++col) BEGIN
					READ_2DA_ENTRY_FORMER weapprof 0 col column_name
					PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
					  SET_2DA_ENTRY 25 (col + 1) 3 %access%						// long bow
					  SET_2DA_ENTRY 26 (col + 1) 3 %access%						// short bow
					END
				  END
				BUT_ONLY
			  END
			  PATCH_IF (access = 0) BEGIN
				INNER_ACTION BEGIN
				  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 15 parameter2 = 0 timing = 9 END
//					LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 5 parameter2 = 0 timing = 9 END
				  BUT_ONLY
				END
			  END
			END
			PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~CROSSBOWS~) BEGIN			// crossbows, bolts
			  INNER_ACTION BEGIN
				COPY_EXISTING ~weapprof.2da~ override
				  READ_2DA_ENTRIES_NOW weapprof 3
				  COUNT_2DA_COLS cols
				  FOR (col = 0; col < cols - 1; ++col) BEGIN
					READ_2DA_ENTRY_FORMER weapprof 0 col column_name
					PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
					  SET_2DA_ENTRY 24 (col + 1) 3 %access%						// crossbow
					END
				  END
				BUT_ONLY
			  END
			  PATCH_IF (access = 0) BEGIN
				INNER_ACTION BEGIN
				  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 27 parameter2 = 0 timing = 9 END
//					LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 31 parameter2 = 0 timing = 9 END
				  BUT_ONLY
				END
			  END
			END
		  END
		END
		INNER_ACTION BEGIN
		  ACTION_IF FILE_EXISTS_IN_GAME ~%mod_clab%.2da~ BEGIN
			APPEND ~%mod_clab%.2da~ ~FNP_USABLE   AP_D5_U%kit_index%   ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        ****        **** ~
			ACTION_IF (%kit_class% = 8 || %kit_class% = 14 || %kit_class% = 15 || %kit_class% = 18 || %kit_class% = 16) BEGIN
			  ACTION_IF (%kit_class% = 8 || %kit_class% = 14 || %kit_class% = 15 || %kit_class% = 18) BEGIN
				OUTER_TEXT_SPRINT class_letter ~P~
			  END
			  ACTION_IF (%kit_class% = 16) BEGIN
				OUTER_TEXT_SPRINT class_letter ~D~
			  END
			  ACTION_IF !(FILE_EXISTS_IN_GAME ~QD_MC_AP.eff~) BEGIN
				CREATE EFF ~QD_MC_AP~ 
				  WRITE_LONG   0x10 146 //cast spell
				  WRITE_LONG   0x14 2   //preset target 
				  WRITE_LONG   0x20 1   //cast instantly (ignore level) 
				  WRITE_SHORT  0x24 1   //permament until death
				  WRITE_SHORT  0x2c 100 //probability 100% 
			  END
			  COPY_EXISTING ~QD_MC_AP.eff~ ~override/d5_u%kit_index%#.eff~
				WRITE_EVALUATED_ASCII 0x30 ~d5_u%kit_index%~
			  LAF QD_ENSURE_QDMC_SPL STR_VAR base_class = EVAL ~%class_letter%~ END
			  COPY_EXISTING ~QD_MC%class_letter%01.spl~ ~override~ 
				LPF ADD_SPELL_EFFECT INT_VAR insert_point = 0 opcode = 177 target = 1 timing = 9 resist_dispel = 0 power = 0 parameter1 = %kit_code% parameter2 = 9 STR_VAR resource = EVAL ~d5_u%kit_index%#~ END  
			END 
		  END
		END
//	  END
	END
  END
 BUT_ONLY
END
//___________________________________________________________________________________
