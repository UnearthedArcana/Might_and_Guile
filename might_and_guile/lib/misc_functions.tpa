
//REMOVE BLANK LINES MACRO_____________________________________________________________
//
DEFINE_PATCH_MACRO ~remove_blank_lines~ BEGIN
	SET "size" = (SOURCE_SIZE - 1)
	READ_BYTE ("%size%") "eof"
	WHILE ((%size% > 0) AND (("%eof%" = 0x0a) OR ("%eof%" = 0x0d))) BEGIN // removes any empty lines at the end of the file
		DELETE_BYTES "%size%" 0x01
		SET "size" = ("%size%" - 1)
		READ_BYTE ("%size%") "eof"
	END
END


//__________________________________________________________________________________
//__________________________________________________________________________________


/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                  \\\\\
///// spell_to_innate                                  \\\\\
/////                                                  \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\

// converts spell to innate and lowers casting time by two

DEFINE_PATCH_MACRO ~spell_to_innate~ BEGIN

  READ_LONG  0x64 abil_off ELSE 0
  READ_SHORT 0x68 abil_num ELSE 0
  READ_ASCII (abil_off + 0x04) bam (8) // reads the bam filename from ability
  WRITE_SHORT 0x1C 4                         // sets spell type to innate (4)
  WRITE_LONG  0x34 1                         // sets spell level to 1 to avoid scripting issues
  WRITE_ASCIIE 0x3A "%bam%" #8      // writes the bam filename from abilities to spell icon
  FOR (index = 0 ; index < abil_num ; ++index) BEGIN
    WRITE_SHORT (abil_off + 0x02 + (0x28 * index)) 4 // changes ability icon location to innate (4)
    READ_SHORT  (abil_off + 0x12 + (0x28 * index)) speed // reads casting speed
    PATCH_IF (speed > 3) BEGIN
      WRITE_SHORT  (abil_off + 0x12 + (0x28 * index)) (speed - 2) // reduces casting speed
    END ELSE BEGIN
      WRITE_SHORT  (abil_off + 0x12 + (0x28 * index)) 0 // makes instant
    END
  END

END


//__________________________________________________________________________________
//__________________________________________________________________________________



//ADD SPELLSTATE MACRO______________________________________________________________
//
DEFINE_ACTION_FUNCTION d5_resolve_state STR_VAR new_state_id = ~blah~ RET new_state_ind BEGIN

  OUTER_SET state_ind = IDS_OF_SYMBOL (~splstate~ ~%new_state_id%~)
  ACTION_IF !(state_ind = 0 - 1) BEGIN
    OUTER_SET new_state_ind = state_ind
  END
  ACTION_IF (state_ind = 0 - 1) BEGIN
    OUTER_SET new_state_ind = 0
    COPY_EXISTING ~splstate.ids~ ~override~
      READ_2DA_ENTRIES_NOW rows 2
      PATCH_IF (rows < 256) BEGIN
        SET found = 0
        FOR (row = 1; row < rows; ++row) BEGIN
          PATCH_IF (found = 0) BEGIN
            READ_2DA_ENTRY_FORMER rows row 0 ind
            READ_2DA_ENTRY_FORMER rows row 1 spec
            SET poss_ind = (ind + 1)
            PATCH_IF (poss_ind < 256) BEGIN
              LOOKUP_IDS_SYMBOL_OF_INT poss_spec ~specific~ poss_ind
              PATCH_IF (~%poss_spec%~ STRING_EQUAL_CASE ~%poss_ind%~) BEGIN
                SET found = 1
                SET new_state_ind = poss_ind
              END
            END
          END
        END
      END
    BUT_ONLY
    ACTION_IF (new_state_ind > 0) BEGIN
      APPEND ~specific.ids~ ~%new_state_ind%  %new_state_id%~
    END
  END
END 


//__________________________________________________________________________________
//__________________________________________________________________________________


//GENERATE NEW SPECIFICS MACRO_________________________________________________________
//
DEFINE_ACTION_FUNCTION d5_resolve_specific STR_VAR new_specific_id = ~blah~ RET new_specific_ind BEGIN
  OUTER_SET new_specific_ind = 0
  COPY_EXISTING ~specific.ids~ ~override~
    READ_2DA_ENTRIES_NOW rows 2
    PATCH_IF (rows < 256) BEGIN
      SET found = 0
      FOR (row = 1; row < rows; ++row) BEGIN
        PATCH_IF (found = 0) BEGIN
          READ_2DA_ENTRY_FORMER rows row 0 ind
          READ_2DA_ENTRY_FORMER rows row 1 spec
          SET poss_ind = (ind + 1)
          PATCH_IF (poss_ind < 256) BEGIN
            LOOKUP_IDS_SYMBOL_OF_INT poss_spec ~specific~ poss_ind
            PATCH_IF (~%poss_spec%~ STRING_EQUAL_CASE ~%poss_ind%~) BEGIN
              SET found = 1
              SET new_specific_ind = poss_ind
            END
          END
        END
      END
    END
  BUT_ONLY
  ACTION_IF (new_specific_ind > 0) BEGIN
    APPEND ~specific.ids~ ~%new_specific_ind%  %new_specific_id%~
  END
END 


//__________________________________________________________________________________
//__________________________________________________________________________________


//JOINABLE NPCS ARRAY MACRO__________________________________________________________
//
DEFINE_ACTION_MACRO JOINABLE_NPC_ARRAYS BEGIN
	//PDIALOG.2DA exists in all games
	ACTION_DEFINE_ASSOCIATIVE_ARRAY JOINABLE_NPC_ARRAY_2da BEGIN ~PDIALOG~ => ~~ END
	//Check PDIALOG.2DA file variants referenced in CAMPAIGN.2DA
	ACTION_IF FILE_EXISTS_IN_GAME ~CAMPAIGN.2DA~ BEGIN
		COPY_EXISTING ~CAMPAIGN.2DA~ ~CAMPAIGN.2DA~
			COUNT_2DA_ROWS 32 "cntrow"
			FOR (i = 0; i < cntrow; i = i + 1) BEGIN
				READ_2DA_ENTRY i 11 32 file
				TO_UPPER file
				DEFINE_ASSOCIATIVE_ARRAY JOINABLE_NPC_ARRAY_2da BEGIN ~%file%~ => ~~ END
			END
		BUT_ONLY
	END
	//Generate array with joinable NPC DV
	ACTION_PHP_EACH JOINABLE_NPC_ARRAY_2da AS file => ~~ BEGIN
		ACTION_IF FILE_EXISTS_IN_GAME ~%file%.2da~ BEGIN
			COPY_EXISTING ~%file%.2da~ ~override~
				COUNT_2DA_ROWS 3 "cntrow"
				FOR (i = 1; i < cntrow; i = i + 1) BEGIN
					READ_2DA_ENTRY i 0 3 "dv"
					TO_UPPER dv
					DEFINE_ASSOCIATIVE_ARRAY JOINABLE_NPC_ARRAY_dv BEGIN ~%dv%~ => ~~ END
				END
			BUT_ONLY
		END
	END
	//Generate array with joinable NPC cre files
	COPY_EXISTING_REGEXP GLOB ~.+\.CRE~ ~override~
		READ_ASCII DEATHVAR "dv" (32) NULL
		TO_UPPER dv
		PATCH_IF VARIABLE_IS_SET $JOINABLE_NPC_ARRAY_dv(~%dv%~) BEGIN
			DEFINE_ASSOCIATIVE_ARRAY JOINABLE_NPC_ARRAY BEGIN ~%SOURCE_FILE%~ => ~%dv%~ END
		END
		PATCH_IF NOT VARIABLE_IS_SET $JOINABLE_NPC_ARRAY_dv(~%dv%~) BEGIN
			DEFINE_ASSOCIATIVE_ARRAY NON_JOINABLE_NPC_ARRAY BEGIN ~%SOURCE_FILE%~ => ~%dv%~ END
		END
	BUT_ONLY
END


//__________________________________________________________________________________
//__________________________________________________________________________________


DEFINE_ACTION_FUNCTION fix_kitlist_missing_ids BEGIN
	COPY_EXISTING ~kitlist.2da~ ~override~
		PRETTY_PRINT_2DA
		PATCH_IF ~%entry%~ STR_EQ ~~ BEGIN
			READ_2DA_ENTRY 1 0 1 "entry"
		END
		COUNT_2DA_COLS "cols"
		SET cnt = 0
		REPLACE_EVALUATE ~^\(.+\)$~ BEGIN
			PATCH_IF cnt >= 3 BEGIN
				INNER_PATCH_SAVE MATCH1 ~%MATCH1%~ BEGIN
					COUNT_REGEXP_INSTANCES ~ +~ num_matches
					WHILE (num_matches < (cols - 1)) BEGIN
						REPLACE_TEXTUALLY ~$~ ~ ZZZZZ~
						SET num_matches = num_matches + 1
					END
				END
			END ELSE BEGIN
				SET cnt = cnt + 1
			END
		END ~%MATCH1%~
		PRETTY_PRINT_2DA
	BUT_ONLY
	COPY_EXISTING ~kitlist.2da~ ~override~
		COUNT_2DA_ROWS 10 rows
		FOR (row = 1; row < rows; ++row) BEGIN
			SET val = (row - 12)
			TEXT_SPRINT new_ids ~000040%val%~
			READ_2DA_ENTRY row 9 10 ids_val
			PATCH_IF !(IS_AN_INT %ids_val%) /*(~%ids_val%~ STRING_EQUAL_CASE ~ZZZZZ~)*/ BEGIN
				SET_2DA_ENTRY row 9 10 ~0x%new_ids%~
			END
		END
	BUT_ONLY
END


//__________________________________________________________________________________
//__________________________________________________________________________________


//UMD FOR CLERICS___________________________________________________________________
//
DEFINE_ACTION_FUNCTION clerics_use_magical_devices BEGIN

 LAF d5_resolve_specific STR_VAR new_specific_id = ~D5_NO_UMD~ RET new_specific_ind END

 OUTER_SET no_umd_specific = %new_specific_ind%

 COPY ~%MOD_FOLDER%/misc/d5_umd.spl~ ~override~
	LPF ADD_SPELL_EFFECT INT_VAR opcode = 206 target = 1 parameter1 = (0 - 1) timing = 9 STR_VAR resource = ~d5_numd~ END

 COPY ~%MOD_FOLDER%/misc/d5_numd.spl~ ~override~
  LPF ALTER_EFFECT INT_VAR match_opcode = 177 STR_VAR resource = ~d5_numd~ END
// add .eff setting local variable
  LPF CLONE_EFFECT INT_VAR match_opcode = 177 STR_VAR resource = ~d5numdlv~ END

 COPY ~%MOD_FOLDER%/misc/D5_NUMD.eff~ ~override~
  WRITE_LONG 0x1c %no_umd_specific%
  WRITE_LONG 0x90 1
  WRITE_EVALUATED_ASCII 0x94 ~D5_NUMD~ #8

// make an .eff to set D5NOUMD local variable
 CREATE EFF ~d5numdlv~
	WRITE_LONG 0x10 309
	WRITE_LONG 0x14 1
	WRITE_LONG 0x1c 1
	WRITE_LONG 0x20 0
	WRITE_LONG 0x24 9
	WRITE_LONG 0x28 0
	WRITE_SHORT 0x2c 100
	WRITE_ASCII 0x30 ~D5NOUMD~ #8

 OUTER_SET scroll_count = 0
 OUTER_SPRINT $use_scrolls(~%scroll_count%~) ~scroll~
 COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
   READ_BYTE     0x2f current ELSE 0
   READ_BYTE     0x2b current2 ELSE 0
   READ_LONG 0x64 headoffset  ELSE 0
   READ_SHORT 0x68 headcount  ELSE 0
   READ_LONG 0x6a effectsoffset  ELSE 0
   haslearn = 0
   hascast = 0
//	  PATCH_IF (headcount = 2) BEGIN
    FOR (headcyc = 0; headcyc < headcount ; headcyc = headcyc + 1) BEGIN
      thishead = 0
      READ_SHORT (headoffset + (headcyc * 0x38) + 0x1e) effcount  ELSE 0
      READ_SHORT (headoffset + (headcyc * 0x38) + 0x20) effectsindex  ELSE 0
      FOR (effcyc = 0; effcyc < effcount; effcyc = effcyc + 1) BEGIN
        READ_SHORT (effectsoffset + (effectsindex + effcyc)* 0x30) opcode ELSE 0
        PATCH_IF (opcode = 0x93) AND (thishead = 0) BEGIN
          READ_ASCII (effectsoffset + 0x14 + (effectsindex + effcyc)* 0x30) resref_learn  ELSE 0
          INNER_PATCH_FILE ~%resref_learn%.spl~ BEGIN
            READ_SHORT 0x1c type
          END
          PATCH_IF (type = 1) BEGIN // spell scroll
            thishead = 1
            haslearn = 1
          END
        END // PATCH_IF... (opcode = learn spell)
        PATCH_IF ((opcode = 0x92) OR (opcode = 0x94)) AND (thishead = 0) BEGIN
          READ_ASCII (effectsoffset + 0x14 + (effectsindex + effcyc)* 0x30) resref_cast  ELSE 0
          INNER_PATCH_FILE ~%resref_cast%.spl~ BEGIN
            READ_SHORT 0x1c type
          END
          PATCH_IF (type = 1) OR (type = 2) BEGIN // spell scroll
            thishead = 1
            hascast = 1
          END
        END // PATCH_IF (opcode = cast spell)
      END // FOR... effect_cycle
    END // FOR... header cycle
//  END // PATCH_IF... have exactly 2 headers
	PATCH_IF (haslearn = 1) AND (hascast = 1) /*AND (~%resref_cast%~ STRING_EQUAL_CASE ~%resref_learn%~) */BEGIN
	  SPRINT $use_scrolls(~%scroll_count%~) ~%SOURCE_RES%~
	  SET ++scroll_count
	END
  END
 BUT_ONLY
 ACTION_PHP_EACH use_scrolls AS num => scroll BEGIN
  ACTION_IF FILE_EXISTS_IN_GAME ~%scroll%.itm~ BEGIN
//	PRINT ~%scroll% is a wizard scroll~
	COPY_EXISTING ~%scroll%.itm~ ~override~
	  WRITE_BYTE 0x1e (THIS BAND 0b01111111)
	  WRITE_BYTE 0x1f (THIS BAND 0b10111001)
	  PATCH_IF !(FILE_EXISTS_IN_GAME ~d5__umd.d5~) BEGIN
		LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 319 target = 1 parameter2 = 6 parameter1 = %no_umd_specific% timing = 2 END
	  END
	BUT_ONLY
  END
 END
 COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
   READ_SHORT	0x1c item_type
   PATCH_IF (item_type = 35) BEGIN
	READ_BYTE 0x1e cleric_use
	READ_BYTE 0x1f mcleric_use
	PATCH_IF (%cleric_use% BAND 0b10000000) = 0b10000000 BEGIN
	  WRITE_BYTE 0x1e (THIS BAND 0b01111111)
	  WRITE_BYTE 0x1f (THIS BAND 0b10111001)
	  PATCH_IF !(FILE_EXISTS_IN_GAME ~d5__umd.d5~) BEGIN
		LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 319 target = 1 parameter2 = 6 parameter1 = %no_umd_specific% timing = 2 END
	  END
	END
   END
  END
 BUT_ONLY

 ACTION_IF GAME_INCLUDES ~sod~ BEGIN
  COPY_EXISTING dplayer2.bcs override
	DECOMPILE_AND_PATCH BEGIN
	  REPLACE_TEXTUALLY ~THEN[%WNL%%LNL%%MNL%%TAB% ]+RESPONSE[%TAB% ]+#100[%WNL%%LNL%%MNL%%TAB% ]+ChangeSpecifics(Myself,\(1\|NORMAL\))~
    ~
  !Specifics(Myself,D5_NO_UMD)
  Switch("D5NOUMD","locals")
THEN
  RESPONSE #0
    ChangeSpecifics(Myself,NORMAL)
    SetGlobal("bd_joined","locals",0)
    SetGlobal("bd_npc_camp","locals",0)
  RESPONSE #1
    ChangeSpecifics(Myself,D5_NO_UMD)~
	END
  BUT_ONLY
 END

 COPY ~%MOD_FOLDER%/lib/markers/d5_marker.d5~ ~override/d5__umd.d5~

END	//	end umd setup


//__________________________________________________________________________________
//__________________________________________________________________________________


DEFINE_ACTION_FUNCTION cleric_clabs_umd BEGIN

 ACTION_IF !(FILE_EXISTS_IN_GAME ~d5__cleric_umd.d5~) BEGIN

  ACTION_FOR_EACH kitclab IN ~CLABMA01~ ~CLABMA02~ ~CLABMA03~ ~CLABMA04~ ~CLABMA05~ ~CLABMA06~ ~CLABMA07~ ~CLABMA08~ ~CLABMA09~ BEGIN 
	ACTION_IF (NOT FILE_EXISTS_IN_GAME ~%kitclab%.2da~) THEN BEGIN
	  COPY ~%MOD_FOLDER%/misc/%kitclab%.2da~ ~override~
	END 
  END  

  APPEND ~clabma01.2da~ ~~
	UNLESS ~AP_D5_UMD~
	IF_EXISTS

  APPEND ~clabpr01.2da~ ~~
	UNLESS ~AP_D5_NUMD~
	IF_EXISTS

  COPY_EXISTING ~kitlist.2da~ ~override~
	COUNT_2DA_ROWS 9 rows
	FOR ( row = 2 ; row < rows ; ++row ) BEGIN
	  READ_2DA_ENTRY row 5 9 clab
	  READ_2DA_ENTRY row 8 9 class
	  PATCH_IF (class = 3) BEGIN
		INNER_ACTION BEGIN
		  ACTION_IF (FILE_EXISTS_IN_GAME ~%clab%.2da~) && !(FILE_CONTAINS_EVALUATED (~%clab%.2da~ ~AP_D5_UMD~)) BEGIN
			APPEND ~%clab%.2da~ ~~
			  UNLESS ~AP_D5_NUMD~
		  END
		END
	  END
	  PATCH_IF (class = 1) BEGIN
		INNER_ACTION BEGIN
		  ACTION_IF (FILE_EXISTS_IN_GAME ~%clab%.2da~) BEGIN
			APPEND ~%clab%.2da~ ~~
			  UNLESS ~AP_D5_UMD~
		  END
		END
	  END
	END
  BUT_ONLY

  LAM JOINABLE_NPC_ARRAYS

  ACTION_PHP_EACH NON_JOINABLE_NPC_ARRAY AS cre => stuff BEGIN
	COPY_EXISTING ~%cre%~ ~override~
	  PATCH_IF (SOURCE_SIZE > 0x2d3) BEGIN
		READ_BYTE 0x278 class
		PATCH_IF (class = 14) BEGIN
		  LPF ADD_CRE_EFFECT INT_VAR opcode=206 target=1 timing=9 parameter1=(0 - 1) STR_VAR resource=~d5_numd~ END
		END
	  END
	BUT_ONLY
  END

  COPY ~%MOD_FOLDER%/lib/markers/d5_marker.d5~ ~override/d5__cleric_umd.d5~

 END
 
END	//	end cleric umd function


//__________________________________________________________________________________
//__________________________________________________________________________________


